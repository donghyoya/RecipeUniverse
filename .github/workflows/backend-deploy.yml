on:
  push:
    branches:
      - backend-main  # backend-main 브랜치에 푸시될 때 실행

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: sideproject-github-action-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: sideProject-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: sideProject-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 현재 리포지토리의 코드를 체크아웃
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'  # 사용할 JDK 배포판

    # Step 1: 빌드된 파일을 압축하여 S3에 업로드 준비
    - name: Build and Zip Application
      run: |
        cd backend/
        chmod +x gradlew
        # 빌드 (필요에 따라 gradle 또는 다른 빌드 명령어 사용)
        ./gradlew clean build -x test
        # zip 파일 생성 (backend.zip)
        zip -r backend.zip
    
    # Step 2: S3 업로드전에 AWS 인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    # Step 3: S3 업로드
    - name: Upload to AWS S3
      run: |
        cd backend/
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://sideproject-github-action-s3-bucket/path/to/deployment/backend.zip \
          --source .

    # Step 4: AWS CodeDeploy 배포 트리거
    - name: Deploy with CodeDeploy
      run: |
        whoami
        pwd
        ls -al
        cd backend/
        ls -al
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=path/to/deployment/backend.zip
