on:
  push:
    branches:
      - backend-main  # backend-main 브랜치에 푸시될 때 실행

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: sideproject-github-action-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: sideProject-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: sideProject-codedeploy-deplyment-group

permissions:
  contents: read

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 현재 리포지토리의 코드를 체크아웃
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'  # 사용할 JDK 배포판

    # Step 1: 소스 빌드하고 압축하기
    - name: Build and Zip Application
      run: |
        cd backend/
        chmod +x gradlew
        # 빌드 (필요에 따라 gradle 또는 다른 빌드 명령어 사용)
        ./gradlew clean build -Pprod -x test
        cd build/libs
        zip -r ../../backend.zip *.jar

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

    # Step 2: 서버로 파일 전송
    - name: Transfer files to server via SCP
      run: |
        cd backend
        # 서버로 파일 전송
        scp -o StrictHostKeyChecking=no backend.zip ${{ secrets.USER }}@${{ secrets.HOST }}:/home/ubuntu/recipeUniverse/backend

    # Step 3: 서버에서 압축 풀고 스크립트 실행
    - name: Deploy on Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} << 'EOF'
          cd /home/ubuntu/recipeUniverse/backend
          unzip -o backend.zip
          cd scripts
          ./stop.sh
          ./start.sh
        EOF
